@model ActiveEdge.Models.SoapNoteModel

@{
  ViewBag.Title = "Create";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row wrapper border-bottom white-bg page-heading">
  <div class="col-sm-4">
    <h2>Create</h2>
    <ol class="breadcrumb">
      <li>
        @Html.ActionLink("List", "Index")
      </li>
      <li class="active">
        <strong>Create</strong>
      </li>
    </ol>
  </div>
  <div class="col-sm-8">
    <div class="title-action">
      @Html.ActionLink("Back to List", "Index", null, new {@class = "btn btn-primary"})
    </div>
  </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
  <div class="row">
    <div class="col-lg-12">
      <div class="ibox float-e-margins">
        <div class="ibox-title">
          <h5>Create SoapNoteModel</h5>
        </div>
        <div class="ibox-content">

          @using (Html.BeginForm())
          {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
              @Html.ValidationSummary(true)

              <div class="form-group">
                @Html.LabelFor(model => model.Date, new {@class = "control-label col-md-2"})
                <div class="col-md-6">
                  @Html.EditorFor(model => model.Date)
                  @Html.ValidationMessageFor(model => model.Date)
                </div>
              </div>

              @*<div class="form-group">
            @Html.LabelFor(model => model.ClientId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientId)
                @Html.ValidationMessageFor(model => model.ClientId)
            </div>
        </div>*@

              <div class="form-group">
                @Html.LabelFor(model => model.ClientName, new {@class = "control-label col-md-2"})
                <div class="col-md-6">
                  @Html.EditorFor(model => model.ClientName)
                  @Html.ValidationMessageFor(model => model.ClientName)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.Feedback, new {@class = "control-label col-md-2"})
                <div class="col-md-6">
                  @Html.EditorFor(model => model.Feedback)
                  @Html.ValidationMessageFor(model => model.Feedback)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.GoalOrExpectations, new {@class = "control-label col-md-2"})
                <div class="col-md-6">
                  @Html.EditorFor(model => model.GoalOrExpectations)
                  @Html.ValidationMessageFor(model => model.GoalOrExpectations)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.ContributingFactorsToCondition, new {@class = "control-label col-md-2"})
                <div class="col-md-6">
                  @Html.EditorFor(model => model.ContributingFactorsToCondition)
                  @Html.ValidationMessageFor(model => model.ContributingFactorsToCondition)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.PreMassagePalpatation, new {@class = "control-label col-md-2"})
                <div class="col-md-6">
                  @Html.EditorFor(model => model.PreMassagePalpatation)
                  @Html.ValidationMessageFor(model => model.PreMassagePalpatation)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.PressureScaleRequired, new {@class = "control-label col-md-2"})
                <div class="col-md-6">
                  @Html.EditorFor(model => model.PressureScaleRequired)
                  @Html.ValidationMessageFor(model => model.PressureScaleRequired)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.SessionPlan, new {@class = "control-label col-md-2"})
                <div class="col-md-6">
                  @Html.EditorFor(model => model.SessionPlan)
                  @Html.ValidationMessageFor(model => model.SessionPlan)
                </div>
              </div>

              <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                  <input type="submit" value="Create" class="btn btn-primary"/>
                  @Html.ActionLink("Cancel", "Index", null, new {@class = "btn btn-white"})
                </div>
              </div>
            </div>
          }

        </div>
      </div>
    </div>
  </div>
</div>


@section scripts {
  @Scripts.Render("~/bundles/jqueryval")
  @Scripts.Render("~/bundles/typeahead")
  @Scripts.Render("~/bundles/soapnotes")

  @Scripts.Render("~/plugins/dataPicker")

  @*@Scripts.Render("~/plugins/iCheck")*@

  @*<script type="text/javascript">
    $(document).ready(function() {

      $('.i-checks').iCheck({
        checkboxClass: 'icheckbox_square-green',
        radioClass: 'iradio_square-green',
      });

    });
  </script>*@
}

@section styles
{

  @Styles.Render("~/plugins/dataPickerStyles")
  @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")

}