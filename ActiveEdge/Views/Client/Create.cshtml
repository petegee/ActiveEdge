@model ActiveEdge.Models.Client

@{
  ViewBag.Title = "Create";
}

<div class="row wrapper border-bottom white-bg page-heading">
  <div class="col-sm-4">
    <h2>Create</h2>
    <ol class="breadcrumb">
      <li>
        @Html.ActionLink("List", "Index")
      </li>
      <li class="active">
        <strong>Create</strong>
      </li>
    </ol>
  </div>
  <div class="col-sm-8">
    <div class="title-action">
      @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
    </div>
  </div>
</div>



<div class="wrapper wrapper-content animated fadeInRight">
  <div class="row">
    <div class="col-lg-12">
      <div class="ibox float-e-margins">
        @using (Html.BeginForm())
        {
          <div class="ibox-title">
            <h5>Client Intake Form</h5>
          </div>
          <div class="ibox-content">
            
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
              <div class="ibox-heading"><h5>Personal Information</h5></div>

              @Html.ValidationSummary(true)

              <div class="form-group">
                @Html.LabelFor(model => model.FirstName, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.FirstName)
                  @Html.ValidationMessageFor(model => model.FirstName)
                </div>
              </div>

              <div class="form-group ">
                @Html.LabelFor(model => model.LastName, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.LastName)
                  @Html.ValidationMessageFor(model => model.LastName)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, new {@class = "control-label col-md-2"})
                <div class="col-md-10 ">
                  <div class="input-group date">
                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                    @Html.EditorFor(model => model.DateOfBirth)
                    @Html.ValidationMessageFor(model => model.DateOfBirth)
                  </div>
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.Gender, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EnumDropDownListFor(model => model.Gender, new {@class = "form-control"})
                  @Html.ValidationMessageFor(model => model.Gender)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.Email, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.Email)
                  @Html.ValidationMessageFor(model => model.Email)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.ContactNumber, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.ContactNumber)
                  @Html.ValidationMessageFor(model => model.ContactNumber)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.AddressLine1, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.AddressLine1)
                  @Html.ValidationMessageFor(model => model.AddressLine1)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.AddressLine2, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.AddressLine2)
                  @Html.ValidationMessageFor(model => model.AddressLine2)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.Suburb, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.Suburb)
                  @Html.ValidationMessageFor(model => model.Suburb)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.City, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.City)
                  @Html.ValidationMessageFor(model => model.City)
                </div>
              </div>
              <div class="ibox-heading"><h5>History</h5></div>

              <div class="form-group">
                @Html.LabelFor(model => model.ExcerciseFrequency, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.EnumDropDownListFor(model => model.ExcerciseFrequency, new { @class = "form-control" })
                  @Html.ValidationMessageFor(model => model.ExcerciseFrequency)
                </div>
              </div>
              <div class="form-group">
                @Html.LabelFor(model => model.IsSmoker, new { @class = "control-label col-md-2" })
                <div class="col-md-10 ">
                  <div class="checkbox">
                    @Html.EditorFor(model => model.IsSmoker)
                    @Html.ValidationMessageFor(model => model.IsSmoker)
                    <label>
                    </label> 
                  </div>
                </div>
              </div>
              <div class="form-group">
                @Html.LabelFor(model => model.CurrentMedications, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.CurrentMedications)
                  @Html.ValidationMessageFor(model => model.CurrentMedications)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.PreviousAilments, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.PreviousAilments)
                  @Html.ValidationMessageFor(model => model.PreviousAilments)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.GeneralPractionerName, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  @Html.EditorFor(model => model.GeneralPractionerName)
                  @Html.ValidationMessageFor(model => model.GeneralPractionerName)
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.MedicalClearance, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                  <div class="checkbox">
                    @Html.EditorFor(model => model.MedicalClearance)
                    @Html.ValidationMessageFor(model => model.MedicalClearance)
                    <label></label>  
                  </div>
                  
                </div>
              </div>

              <div class="form-group">
                @Html.LabelFor(model => model.HasHadPreviousTherapy, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  <div class="checkbox">
                    @Html.EditorFor(model => model.HasHadPreviousTherapy)
                    @Html.ValidationMessageFor(model => model.HasHadPreviousTherapy)
                    <label></label>
                  </div>

                </div>
              </div>
              <div class="form-group">
                @Html.LabelFor(model => model.TouchPreference, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                  @Html.EnumDropDownListFor(model => model.TouchPreference, new { @class = "form-control" })
                  @Html.ValidationMessageFor(model => model.TouchPreference)
                </div>
              </div>
              <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                  <input type="submit" value="Create" class="btn btn-primary"/>
                  @Html.ActionLink("Cancel", "Index", null, new {@class = "btn btn-white"})
                </div>
              </div>
            </div>


           
          </div>
          

         
        }
      </div>
    </div>
  </div>
</div>



@section scripts {
  @Scripts.Render("~/bundles/jqueryval")
  @Scripts.Render("~/plugins/dataPicker")
  @Scripts.Render("~/bundles/customers")
}

@section styles
{
  @Styles.Render("~/plugins/dataPickerStyles")

}
