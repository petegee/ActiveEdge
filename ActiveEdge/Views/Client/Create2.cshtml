@using ActiveEdge.Helpers
@model ActiveEdge.Models.Client

@{
  ViewBag.Title = "Create2";
}
<div class="wrapper wrapper-content animated fadeInRight">
  <div class="row">
    <div class="col-lg-12">
      <div class="ibox">
        <div class="ibox-title">
          <h5>Wizard with Validation</h5>
          <div class="ibox-tools">
            <a class="collapse-link">
              <i class="fa fa-chevron-up"></i>
            </a>
            <a class="dropdown-toggle" data-toggle="dropdown" href="#">
              <i class="fa fa-wrench"></i>
            </a>
            <ul class="dropdown-menu dropdown-user">
              <li>
                <a href="#">Config option 1</a>
              </li>
              <li>
                <a href="#">Config option 2</a>
              </li>
            </ul>
            <a class="close-link">
              <i class="fa fa-times"></i>
            </a>
          </div>
        </div>
        <div class="ibox-content">
          <h2>
            Validation Wizard Form
          </h2>
          <p>
            This example show how to use Steps with jQuery Validation plugin.
          </p>

          <form id="form" action="#" class="wizard-big">
            <h1>Personal Information</h1>
            <fieldset>
              <h2>Personal Information</h2>
              <div class="row">
                <div class="col-lg-5">
                  @Html.FormGroupEditorFor(model => model.FirstName)

                </div>
                <div class="col-lg-5">
                  @Html.FormGroupEditorFor(model => model.LastName)
                </div>
              </div>
              <div class="row">
                <div class="col-lg-5">
                  @Html.FormGroupEditorFor(model => model.DateOfBirth)
                </div>
                <div class="col-lg-5">
                  @Html.FormGroupEnumDropDownListFor(model => model.Gender)
                </div>
              </div>
              <div class="row">
                <div class="col-lg-5">
                  @Html.FormGroupEditorFor(model => model.Email)
                </div>
                <div class="col-lg-5">
                  @Html.FormGroupEditorFor(model => model.ContactNumber)
                </div>
              </div>
              <div class="row">
                <div class="col-lg-5">
                  @Html.FormGroupEditorFor(model => model.AddressLine1)
                </div>
                <div class="col-lg-5">
                  @Html.FormGroupEditorFor(model => model.AddressLine2)
                </div>
              </div>
              <div class="row">
                <div class="col-lg-5">
                  @Html.FormGroupEditorFor(model => model.Suburb)
                </div>
                <div class="col-lg-5">
                  @Html.FormGroupEditorFor(model => model.City)
                </div>
              </div>
                <div class="col-lg-4">
                  <div class="text-center">
                    <div style="margin-top: 20px">
                      <i class="fa fa-sign-in" style="color: #e5e5e5; font-size: 180px;"></i>
                    </div>
                  </div>
                </div>
              @*</div>*@

            </fieldset>
            <h1>History</h1>
            <fieldset>
              <h2>History</h2>
              <div class="row">
                <div class="col-lg-8">
                  @Html.FormGroupEnumDropDownListFor(model => model.ExcerciseFrequency)
                  @Html.FormGroupCheckBoxFor(m => m.IsSmoker)
                  @Html.FormGroupEditorFor(model => model.CurrentMedications)
                  @Html.FormGroupEditorFor(model => model.PreviousAilments)
                  @Html.FormGroupEditorFor(model => model.GeneralPractionerName)
                  @Html.FormGroupCheckBoxFor(m => m.MedicalClearance)
                  @Html.FormGroupCheckBoxFor(m => m.HasHadPreviousTherapy)
                  @Html.FormGroupEnumDropDownListFor(model => model.TouchPreference)
                </div>
              </div>
            </fieldset>
            <h1>Medical Conditions</h1>
            <fieldset>
              <h2>Medical Conditions</h2>
              <div class="row">
                <div class="col-lg-4">
                  @Html.EditorFor(client => client.ContraIndicationsArteriosclerosis)
                  @Html.EditorFor(client => client.ContraIndicationsAsthma)
                  @Html.EditorFor(client => client.ContraIndicationsCancer)
                  @Html.EditorFor(client => client.ContraIndicationsColdOrFlu)
                  @Html.EditorFor(client => client.ContraIndicationsContactLenses)
                  @Html.EditorFor(client => client.ContraIndicationsCutsBurnsBruises)
                  @Html.EditorFor(client => client.ContraIndicationsDepression)
                  @Html.EditorFor(client => client.ContraIndicationsDiabetes)
                  @Html.EditorFor(client => client.ContraIndicationsDizziness)
                </div>
                <div class="col-lg-4">
                  @Html.EditorFor(client => client.ContraIndicationsHeadache)
                  @Html.EditorFor(client => client.ContraIndicationsHeartDisease)
                  @Html.EditorFor(client => client.ContraIndicationsHemophilia)
                  @Html.EditorFor(client => client.ContraIndicationsHernia)
                  @Html.EditorFor(client => client.ContraIndicationsHighBloodPressure)
                  @Html.EditorFor(client => client.ContraIndicationsImflammation)
                  @Html.EditorFor(client => client.ContraIndicationsIrritatedSkinRash)
                  @Html.EditorFor(client => client.ContraIndicationsIsPregnant)
                  @Html.EditorFor(client => client.ContraIndicationsLowBloodPressure)

                </div>
                <div class="col-lg-4">
                  @Html.EditorFor(client => client.ContraIndicationsMusculoskletalProblems)
                  @Html.EditorFor(client => client.ContraIndicationsPinsPacemaker)
                  @Html.EditorFor(client => client.ContraIndicationsSeverePain)
                  @Html.EditorFor(client => client.ContraIndicationsSunburn)
                  @Html.EditorFor(client => client.ContraIndicationsSleepDisturbance)
                  @Html.EditorFor(client => client.ContraIndicationsVaricoseVeins)
                  @Html.EditorFor(client => client.ContraIndicationsIsPregnant)
                  @Html.EditorFor(client => client.ContraIndicationsStomachUlcers)
                  @Html.EditorFor(client => client.ContraIndicationsEpilepsy)
                </div>
              </div>
              <div class="row">
                <div class="col-lg-4">
                  <div class="form-group">
                    @Html.LabelFor(model => model.CurrentStressLevels)
                    <div id="currentStressLevelsSlider"></div>
                    @Html.HiddenFor(model => model.CurrentStressLevels)
                  </div>
                </div>
              </div>
              <div class="row">
                <div class="col-lg-4">
                  <div class="form-group">
                    @Html.LabelFor(model => model.CurrentPainOrTensionLevels)
                    <div id="currentPainOrTensionLevelsSlider"></div>
                    @Html.HiddenFor(model => model.CurrentPainOrTensionLevels)
                  </div>
                </div>
              </div>
              <div class="row">
                <div class="col-lg-8">
                  @Html.FormGroupEditorFor(model => model.Difficulties)
                  @Html.FormGroupEditorFor(model => model.AreasNotToBeMassaged)
                </div>
              </div>
            </fieldset>
            <h1>Finish</h1>
            <fieldset>
              <h2>Terms and Conditions</h2>
              <div class="row">
                <div class="col-lg-12">
                  @Html.FormGroupCheckBoxFor(model => model.TermsAndConditionsConditions1)
                  @Html.FormGroupCheckBoxFor(model => model.TermsAndConditionsConditions2)
                  @Html.FormGroupCheckBoxFor(model => model.TermsAndConditionsConditions3)
                  @Html.FormGroupCheckBoxFor(model => model.TermsAndConditionsConditions4)
                  @Html.FormGroupCheckBoxFor(model => model.TermsAndConditionsConditions5)
                  @Html.FormGroupCheckBoxFor(model => model.TermsAndConditionsConditions6)
                  @Html.FormGroupCheckBoxFor(model => model.TermsAndConditionsConditions7)
                  @Html.FormGroupCheckBoxFor(model => model.TermsAndConditionsConditions8)
                </div>
              </div>
            </fieldset>
          </form>
        </div>
      </div>
    </div>

  </div>
</div>

@section Styles {
  @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
  @Styles.Render("~/plugins/wizardStepsStyles")
  @Styles.Render("~/plugins/nouisliderStyles")
}

@section Scripts {
  @Scripts.Render("~/plugins/wizardSteps")
  @Scripts.Render("~/plugins/iCheck")
  @Scripts.Render("~/plugins/validate")
  @Scripts.Render("~/plugins/nouislider")
  <script type="text/javascript">

    $(document).ready(function() {


      $("#wizard").steps();
      $("#form").steps({
        bodyTag: "fieldset",
        onStepChanging: function(event, currentIndex, newIndex) {
          // Always allow going backward even if the current step contains invalid fields!
          if (currentIndex > newIndex) {
            return true;
          }

          ////// Forbid suppressing "Warning" step if the user is to young
          //if (newIndex === 3 && Number($("#age").val()) < 18) {
          //  return false;
          //}

          var form = $(this);

          // Clean up if user went backward before
          if (currentIndex < newIndex) {
            // To remove error styles
            $(".body:eq(" + newIndex + ") label.error", form).remove();
            $(".body:eq(" + newIndex + ") .error", form).removeClass("error");
          }

          // Disable validation on fields that are disabled or hidden.
          form.validate().settings.ignore = ":disabled,:hidden";

          // Start validation; Prevent going forward if false
          return form.valid();
        },
        onStepChanged: function(event, currentIndex, priorIndex) {

          $('.i-checks').iCheck({
            checkboxClass: 'icheckbox_square-green',
            radioClass: 'iradio_square-green',
          });

          // Suppress (skip) "Warning" step if the user is old enough.
          //if (currentIndex === 2 && Number($("#age").val()) >= 18) {
          //  $(this).steps("next");
          //}

          //// Suppress (skip) "Warning" step if the user is old enough and wants to the previous step.
          //if (currentIndex === 2 && priorIndex === 3) {
          //  $(this).steps("previous");
          //}
        },
        onFinishing: function(event, currentIndex) {
          var form = $(this);

          // Disable validation on fields that are disabled.
          // At this point it's recommended to do an overall check (mean ignoring only disabled fields)
          form.validate().settings.ignore = ":disabled";

          // Start validation; Prevent form submission if false
          return form.valid();
        },
        onFinished: function(event, currentIndex) {
          var form = $(this);

          // Submit form input
          form.submit();
        }
      }).validate({
        errorPlacement: function(error, element) {
          element.before(error);
        },
        rules: {
          confirm: {
            equalTo: "#password"
          }
        }
      });


      $("#currentStressLevelsSlider").noUiSlider({
        start: 40,
        behaviour: 'tap',
        connect: 'lower',
        step: 1,
        range: {
          'min': 0,
          'max': 100
        }
      }).change(function(event, value) {
        $("#CurrentStressLevels").val(value);
      });

      $("#currentPainOrTensionLevelsSlider").noUiSlider({
        start: 40,
        behaviour: 'tap',
        connect: 'lower',
        step: 1,
        range: {
          'min': 0,
          'max': 100
        }
      }).change(function(event, value) {
        $("#CurrentPainOrTensionLevels").val(value);
      });


    });


  </script>
}